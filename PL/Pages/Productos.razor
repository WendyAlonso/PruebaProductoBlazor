@page "/productos"
@inject HttpClient HttpClient
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory ClientFactory


<div class="container">
    <div class="row">
        <div class="col-md-12" style="text-align:center;">
            <h1>Productos</h1>
        </div>
    </div>
    <br />
    <br />
    <div class="row">
        <div class="col-md-3" style="float:left;">
            <a class="btn btn-success" href="form/@IdProducto">Agregar Nuevo</a>
        </div>
        <div class="col-md-3" style="float:right;">
            <input type="text" class="form-control" @bind="Busqueda" placeholder="Nombre del Producto" />
        </div>
        <div class="col-md-3" style="float:right;">
            <a class="btn btn-info" @onclick="BusquedaRegistros"><i class="fa-solid fa-magnifying-glass"></i></a>
        </div>
    </div>
    <br />
    <br />
    @if (productos.Count > 0)
    {
        <table class="table table-bordered table-hover table-responsive" id="table_productos">
            <thead class="table-secondary" style="text-align:center;">
                <tr>
                    <td>Editar</td>
                    <td>Nombre</td>
                    <td>Precio</td>
                    <td>Categoria</td>
                    <td>Eliminar</td>
                </tr>
            </thead>

            <tbody>

                @foreach (ML.Producto producto in productos)
                {
                    <tr>
                        <td style="text-align:center; vertical-align:middle;"><a class="btn btn-warning" href="form/@producto.IdProducto"><i class="fa-solid fa-pencil"></i></a></td>
                        <td>@producto.Nombre</td>
                        <td>@producto.Precio</td>
                        <td>@producto.Categoria.Nombre</td>
                        <td style="text-align:center; vertical-align:middle;"><a class="btn btn-danger" href="eliminar/@producto.IdProducto" onclick="return confirm('Estas seguro que deseas eliminar este registro?');"><i class="fa-solid fa-trash-can"></i></a></td>
                    </tr>
                }


            </tbody>

        </table>
    }
    else if (Registros == "Sin Registros")
    {
        <div class="alert-danger" style="text-align:center;">Ya no existen Registros</div>

    }
    else
    {
        <div style="text-align:center;">
            <i class="fa-solid fa-spinner fa-spin-pulse" style="width:35px;"></i>
        </div>

    }
    <br />
    <br />
    @if(Registros == "Sin Registros")
    {
        <button class="btn btn-primary" value="@Numero" style="float:right" @onclick="Siguiente" disabled><i class="fa-solid fa-arrow-right"></i></button>
    }
    else
    {
        <button class="btn btn-primary" value="@Numero" style="float:right" @onclick="Siguiente"><i class="fa-solid fa-arrow-right"></i></button>
    }

    @if (@Numero == 1)
    {
        <button class="btn btn-primary" value="@Numero" style="float:left" @onclick="Anterior" disabled><i class="fa-solid fa-arrow-left"></i></button>
    }
    else
    {
        <button class="btn btn-primary" value="@Numero" style="float:left" @onclick="Anterior"><i class="fa-solid fa-arrow-left"></i></button>
    }
</div>


@code {
    public int IdProducto = 0;
    public int Numero { get; set; } = 1;
    private string Busqueda { get; set; }
    private string Registros { get; set; }

    public ML.Result result = new ML.Result();
    public List<ML.Producto> productos = new List<ML.Producto>();
    public List<ML.Producto> productos2 = new List<ML.Producto>();

    protected override async Task OnInitializedAsync()
    {
        productos = await HttpClient.GetFromJsonAsync<List<ML.Producto>>("Producto/GetPaginado?Siguiente=" + Numero);
    }

    public async Task Siguiente()
    {
        Numero++;
        productos = await HttpClient.GetFromJsonAsync<List<ML.Producto>>("Producto/GetPaginado?Siguiente=" + Numero);
        if (productos.Count == 0)
        {
            Registros = "Sin Registros";
        }
    }

    public async Task Anterior()
    {
        Numero--;
        productos = await HttpClient.GetFromJsonAsync<List<ML.Producto>>("Producto/GetPaginado?Siguiente=" + Numero);


    }

    private async Task BusquedaRegistros()
    {
        if (Busqueda == "")
        {
            productos = await HttpClient.GetFromJsonAsync<List<ML.Producto>>("Producto/GetPaginado?Siguiente=" + Numero);
        }
        else
        {
            productos = await HttpClient.GetFromJsonAsync<List<ML.Producto>>("Producto/GetAll");
            var nombre = Busqueda.Trim().ToLower();
            productos = productos.Where(p => p.Nombre.Trim().ToLower().Contains(nombre)).ToList();
        }

    }
}